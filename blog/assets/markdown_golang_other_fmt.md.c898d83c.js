import{_ as s,o as n,c as a,X as t}from"./chunks/framework.6bc268d3.js";const A=JSON.parse('{"title":"fmt使用指南","description":"","frontmatter":{},"headers":[],"relativePath":"markdown/golang/other/fmt.md","filePath":"markdown/golang/other/fmt.md","lastUpdated":null}'),l={name:"markdown/golang/other/fmt.md"},e=t(`<h1 id="fmt使用指南" tabindex="-1">fmt使用指南 <a class="header-anchor" href="#fmt使用指南" aria-label="Permalink to &quot;fmt使用指南&quot;">​</a></h1><p>fmt包实现了格式化I/O。主要分为向外输出内容和获取输入内容两大部分。<br> Go 语言中的fmt包含有格式化输入输出的函数，类似于C语言的printf和scanf。格式字符串的规则来源于C但更简单更好用</p><h2 id="fmt官网传送门" tabindex="-1"><a href="https://pkg.go.dev/fmt" target="_blank" rel="noreferrer">fmt官网传送门</a> <a class="header-anchor" href="#fmt官网传送门" aria-label="Permalink to &quot;[fmt官网传送门]&quot;">​</a></h2><h2 id="函数列表" tabindex="-1">函数列表 <a class="header-anchor" href="#函数列表" aria-label="Permalink to &quot;函数列表&quot;">​</a></h2><div class="language-go line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Printf</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">format </span><span style="color:#C792EA;">string</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">...interface{})</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">n </span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> err </span><span style="color:#C792EA;">error</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Print</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">a </span><span style="color:#89DDFF;">...interface{})</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">n </span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> err </span><span style="color:#C792EA;">error</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Println</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">a </span><span style="color:#89DDFF;">...interface{})</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">n </span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> err </span><span style="color:#C792EA;">error</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Sprintf</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">format </span><span style="color:#C792EA;">string</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">...interface{})</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">string</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Sprint</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">a </span><span style="color:#89DDFF;">...interface{})</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">string</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Sprintln</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">a </span><span style="color:#89DDFF;">...interface{})</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">string</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Fprintf</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">w io</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Writer</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> format </span><span style="color:#C792EA;">string</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">...interface{})</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">n </span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> err </span><span style="color:#C792EA;">error</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Fprint</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">w io</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Writer</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">...interface{})</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">n </span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> err </span><span style="color:#C792EA;">error</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Fprintln</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">w io</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Writer</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">...interface{})</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">n </span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> err </span><span style="color:#C792EA;">error</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Scanf</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">format </span><span style="color:#C792EA;">string</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">...interface{})</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">n </span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> err </span><span style="color:#C792EA;">error</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Scan</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">a </span><span style="color:#89DDFF;">...interface{})</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">n </span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> err </span><span style="color:#C792EA;">error</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Scanln</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">a </span><span style="color:#89DDFF;">...interface{})</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">n </span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> err </span><span style="color:#C792EA;">error</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Sscanf</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">str </span><span style="color:#C792EA;">string</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> format </span><span style="color:#C792EA;">string</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">...interface{})</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">n </span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> err </span><span style="color:#C792EA;">error</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Sscan</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">str </span><span style="color:#C792EA;">string</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">...interface{})</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">n </span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> err </span><span style="color:#C792EA;">error</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Sscanln</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">str </span><span style="color:#C792EA;">string</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">...interface{})</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">n </span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> err </span><span style="color:#C792EA;">error</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Fscanf</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">r io</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Reader</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> format </span><span style="color:#C792EA;">string</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">...interface{})</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">n </span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> err </span><span style="color:#C792EA;">error</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Fscan</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">r io</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Reader</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">...interface{})</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">n </span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> err </span><span style="color:#C792EA;">error</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Fscanln</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">r io</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Reader</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">...interface{})</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">n </span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> err </span><span style="color:#C792EA;">error</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Errorf</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">format </span><span style="color:#C792EA;">string</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">...interface{})</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">error</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h3 id="普通占位符" tabindex="-1">普通占位符 <a class="header-anchor" href="#普通占位符" aria-label="Permalink to &quot;普通占位符&quot;">​</a></h3><table><thead><tr><th style="text-align:center;">占位符</th><th style="text-align:center;">说明</th><th style="text-align:center;">举例</th></tr></thead><tbody><tr><td style="text-align:center;">%v</td><td style="text-align:center;">相应值的默认格式</td><td style="text-align:center;">fmt. Printf(&quot;%v&quot;, name)</td></tr><tr><td style="text-align:center;">%+v</td><td style="text-align:center;">打印结构体时，会添加字段名</td><td style="text-align:center;">fmt. Printf(&quot;%+v&quot;, people)</td></tr><tr><td style="text-align:center;">%#v</td><td style="text-align:center;">相应值的Go语法表示</td><td style="text-align:center;">fmt. Printf(&quot;%#v&quot;, people)</td></tr><tr><td style="text-align:center;">%T</td><td style="text-align:center;">相应值的类型的Go语法表示</td><td style="text-align:center;">fmt. Printf(&quot;%T&quot;, people)</td></tr><tr><td style="text-align:center;">%%</td><td style="text-align:center;">字面上的百分号</td><td style="text-align:center;">fmt. Printf(&quot;%%&quot;)</td></tr></tbody></table><h3 id="布尔占位符" tabindex="-1">布尔占位符 <a class="header-anchor" href="#布尔占位符" aria-label="Permalink to &quot;布尔占位符&quot;">​</a></h3><table><thead><tr><th style="text-align:center;">占位符</th><th style="text-align:center;">说明</th><th style="text-align:center;">举例</th></tr></thead><tbody><tr><td style="text-align:center;">%t</td><td style="text-align:center;">true 或 false</td><td style="text-align:center;">fmt. Printf(&quot;%t&quot;, true)</td></tr></tbody></table><h3 id="整数占位符" tabindex="-1">整数占位符 <a class="header-anchor" href="#整数占位符" aria-label="Permalink to &quot;整数占位符&quot;">​</a></h3><table><thead><tr><th style="text-align:center;">占位符</th><th style="text-align:center;">说明</th><th style="text-align:center;">举例</th></tr></thead><tbody><tr><td style="text-align:center;">%b</td><td style="text-align:center;">二进制表示</td><td style="text-align:center;">fmt. Printf(&quot;%b&quot;, 5)</td></tr><tr><td style="text-align:center;">%c</td><td style="text-align:center;">相应Unicode码点所表示的字符</td><td style="text-align:center;">fmt. Printf(&quot;%c&quot;, 0x4E2D)</td></tr><tr><td style="text-align:center;">%d</td><td style="text-align:center;">十进制表示</td><td style="text-align:center;">fmt. Printf(&quot;%d&quot;, 0x12)</td></tr><tr><td style="text-align:center;">%o</td><td style="text-align:center;">八进制表示</td><td style="text-align:center;">fmt. Printf(&quot;%d&quot;, 10)</td></tr><tr><td style="text-align:center;">%q</td><td style="text-align:center;">单引号围绕的字符字面值，由Go语法安全地转义</td><td style="text-align:center;">fmt. Printf(&quot;%q&quot;, 0x4E2D)</td></tr><tr><td style="text-align:center;">%x</td><td style="text-align:center;">十六进制表示，字母形式为小写 a-f</td><td style="text-align:center;">fmt. Printf(&quot;%x&quot;, 13)</td></tr><tr><td style="text-align:center;">%X</td><td style="text-align:center;">十六进制表示，字母形式为大写 A-F</td><td style="text-align:center;">fmt. Printf(&quot;%x&quot;, 13)</td></tr><tr><td style="text-align:center;">%U</td><td style="text-align:center;">Unicode格式：U+1234，等同于 &quot;U+%04X&quot;</td><td style="text-align:center;">fmt. Printf(&quot;%U&quot;, 0x4E2D)</td></tr></tbody></table><h3 id="浮点数和复数的组成部分-实部和虚部" tabindex="-1">浮点数和复数的组成部分（实部和虚部） <a class="header-anchor" href="#浮点数和复数的组成部分-实部和虚部" aria-label="Permalink to &quot;浮点数和复数的组成部分（实部和虚部）&quot;">​</a></h3><table><thead><tr><th style="text-align:center;">占位符</th><th style="text-align:center;">说明</th><th style="text-align:center;">举例</th></tr></thead><tbody><tr><td style="text-align:center;">%e</td><td style="text-align:center;">(=%.6e) 6位小数点, 科学计数法，例如 -1234.456e+78</td><td style="text-align:center;">fmt. Printf(&quot;%e&quot;, 10.2)</td></tr><tr><td style="text-align:center;">%E</td><td style="text-align:center;">科学计数法，例如 -1234.456E+78</td><td style="text-align:center;">fmt. Printf(&quot;%e&quot;, 10.2)</td></tr><tr><td style="text-align:center;">%f</td><td style="text-align:center;">(=%.6f) 6位小数点, 有小数点而无指数，例如 123.456</td><td style="text-align:center;">fmt. Printf(&quot;%f&quot;, 10.2)</td></tr><tr><td style="text-align:center;">%g</td><td style="text-align:center;">根据情况选择 %e 或 %f 以产生更紧凑的（无末尾的0）输出</td><td style="text-align:center;">fmt. Printf(&quot;%g&quot;, 10.20)</td></tr><tr><td style="text-align:center;">%G</td><td style="text-align:center;">根据情况选择 %E 或 %f 以产生更紧凑的（无末尾的0）输出</td><td style="text-align:center;">fmt. Printf(&quot;%G&quot;, 10.20+2i)</td></tr></tbody></table><h3 id="字符串与字节切片" tabindex="-1">字符串与字节切片 <a class="header-anchor" href="#字符串与字节切片" aria-label="Permalink to &quot;字符串与字节切片&quot;">​</a></h3><table><thead><tr><th style="text-align:center;">占位符</th><th style="text-align:center;">说明</th><th style="text-align:center;">举例</th></tr></thead><tbody><tr><td style="text-align:center;">%s</td><td style="text-align:center;">输出字符串表示（string类型或[]byte)</td><td style="text-align:center;">fmt. Printf(&quot;%s&quot;, []byte(&quot;oldboy&quot;))</td></tr><tr><td style="text-align:center;">%10s</td><td style="text-align:center;">输出字符串最小宽度为10(右对齐)</td><td style="text-align:center;">fmt. Printf(&quot;%10s&quot;, &quot;oldboy&quot;)</td></tr><tr><td style="text-align:center;">%-10s</td><td style="text-align:center;">输出字符串最小宽度为10(左对齐)</td><td style="text-align:center;">fmt. Printf(&quot;%-10s&quot;, &quot;oldboy&quot;)</td></tr><tr><td style="text-align:center;">%.5s</td><td style="text-align:center;">输出字符串最大宽度为5</td><td style="text-align:center;">fmt. Printf(&quot;%.5s&quot;, &quot;oldboy&quot;)</td></tr><tr><td style="text-align:center;">%5.10s</td><td style="text-align:center;">输出字符串最小宽度为5，最大宽度为10</td><td style="text-align:center;">fmt. Printf(&quot;%5.10s&quot;, &quot;oldboy&quot;)</td></tr><tr><td style="text-align:center;">%-5.10s</td><td style="text-align:center;">输出字符串最小宽度为5，最大宽度为10(左对齐)</td><td style="text-align:center;">fmt. Printf(&quot;%-5.10s&quot;, &quot;oldboy&quot;)</td></tr><tr><td style="text-align:center;">%5.3s</td><td style="text-align:center;">输出字符串宽度为5, 如果原字符串宽度大于3, 则截断</td><td style="text-align:center;">fmt. Printf(&quot;%5.3s&quot;, &quot;oldboy&quot;)</td></tr><tr><td style="text-align:center;">%010s</td><td style="text-align:center;">如果宽度小于10，就会在字符串前面补零</td><td style="text-align:center;">fmt. Printf(&quot;%010s&quot;, &quot;oldboy&quot;)</td></tr><tr><td style="text-align:center;">%q</td><td style="text-align:center;">双引号围绕的字符串，由Go语法安全地转义</td><td style="text-align:center;">fmt. Printf(&quot;%q&quot;, &quot;oldboy&quot;)</td></tr><tr><td style="text-align:center;">%x</td><td style="text-align:center;">十六进制，小写字母，每字节两个字符</td><td style="text-align:center;">fmt. Printf(&quot;%x&quot;, &quot;oldboy&quot;)</td></tr><tr><td style="text-align:center;">%X</td><td style="text-align:center;">十六进制，大写字母，每字节两个字符</td><td style="text-align:center;">fmt. Printf(&quot;%X&quot;, &quot;oldboy&quot;)</td></tr></tbody></table><h3 id="指针" tabindex="-1">指针 <a class="header-anchor" href="#指针" aria-label="Permalink to &quot;指针&quot;">​</a></h3><table><thead><tr><th style="text-align:center;">占位符</th><th style="text-align:center;">说明</th><th style="text-align:center;">举例</th></tr></thead><tbody><tr><td style="text-align:center;">%p</td><td style="text-align:center;">十六进制表示，前缀 0x</td><td style="text-align:center;">fmt. Printf(&quot;%p&quot;, &amp;site)</td></tr><tr><td style="text-align:center;">%#p</td><td style="text-align:center;">不带前缀 0x</td><td style="text-align:center;">fmt. Printf(&quot;%#p&quot;, &amp;site)</td></tr></tbody></table><h2 id="fmt-print" tabindex="-1"><code>fmt.Print</code> <a class="header-anchor" href="#fmt-print" aria-label="Permalink to &quot;\`fmt.Print\`&quot;">​</a></h2><p>在 fmt 包中，有三种标准输出的打印语句：</p><ul><li>Printf 可以给定输出格式 <ul><li>Printf(“格式化串定义”, 变量列表)</li><li>格式化串定义：即format字符串</li><li>变量列表: 可以是任意类型的值变量列表，系统实现的是一通用接口函数</li></ul></li></ul><div class="language-go line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Printf</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">format </span><span style="color:#C792EA;">string</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">...interface{})</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">n </span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> err </span><span style="color:#C792EA;">error</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;"> 参数列表</span></span>
<span class="line"><span style="color:#A6ACCD;">  a… 值变量列表</span></span>
<span class="line"><span style="color:#A6ACCD;">返回值：</span></span>
<span class="line"><span style="color:#A6ACCD;">返回打印字符数 n</span></span>
<span class="line"><span style="color:#A6ACCD;">返回error</span></span>
<span class="line"><span style="color:#A6ACCD;">功能说明：这个函数主要是用来根据系统默认格式字符串和参数表生成一个打印字符串</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>Print 这个函数不需要format字符串，等价于对每一个参数设置为%v</p><div class="language-go line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Print</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">a </span><span style="color:#89DDFF;">...interface{})</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">n </span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> err </span><span style="color:#C792EA;">error</span><span style="color:#89DDFF;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Println 等价于Print语句，但输出时会在参数之间加上空格并在输出结束后换行</p><div class="language-go line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Println</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">a </span><span style="color:#89DDFF;">...interface{})</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">n </span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> err </span><span style="color:#C792EA;">error</span><span style="color:#89DDFF;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>示例</p><details class="details custom-block"><summary>Print系列使用示例</summary><div class="language-go line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// %v  基本格式的值</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// %+v 当输出结构体时，扩展标志添加成员的名字。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// %#v 值的Go语法表示。</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;"> t </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">T</span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">7</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">2.35</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">abc</span><span style="color:#A6ACCD;">\\t</span><span style="color:#C3E88D;">def</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"> fmt</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">No01:%v</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> t</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">//No01:&amp;{7 -2.35 abc      def}</span></span>
<span class="line"><span style="color:#A6ACCD;"> fmt</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">No02:%+v</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> t</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">//No02:&amp;{a:7 b:-2.35 c:abc        def}</span></span>
<span class="line"><span style="color:#A6ACCD;"> fmt</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">No03:%#v</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> t</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">//No03:&amp;main.T{a:7, b:-2.35, c:&quot;abc\\tdef&quot;}</span></span>
<span class="line"><span style="color:#A6ACCD;"> fmt</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">No04:%#v</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> timeZone</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">//No04:map[string]int{&quot;EST&quot;:-18000, &quot;CST&quot;:-21600, &quot;MST&quot;:-25200, &quot;PST&quot;:-28800, &quot;UTC&quot;:0}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">var</span><span style="color:#A6ACCD;"> timeZone </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">map[</span><span style="color:#C792EA;">string</span><span style="color:#89DDFF;">]</span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">UTC</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">60</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">60</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">EST</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">60</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">60</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">CST</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">6</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">60</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">60</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">MST</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">7</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">60</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">60</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">PST</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">8</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">60</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">60</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">T</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">struct</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;"> a </span><span style="color:#C792EA;">int</span></span>
<span class="line"><span style="color:#A6ACCD;"> b </span><span style="color:#C792EA;">float32</span></span>
<span class="line"><span style="color:#A6ACCD;"> c </span><span style="color:#C792EA;">string</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div></details><h2 id="fmt-sprint" tabindex="-1"><code>fmt.Sprint</code> <a class="header-anchor" href="#fmt-sprint" aria-label="Permalink to &quot;\`fmt.Sprint\`&quot;">​</a></h2><p><code>fmt.Sprint</code> 函数用于将格式化的数据转换为字符串。它接受一个格式字符串和一系列参数，并返回一个格式化后的字符串。这个函数的用法类似于 <code>fmt.Printf</code>，但是它将结果作为字符串返回，而不是直接打印出来。</p><div class="language-go line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">package</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">fmt</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;"> name </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Alice</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;"> age </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">30</span></span>
<span class="line"><span style="color:#A6ACCD;"> height </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">165.5</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 使用占位符生成格式化字符串</span></span>
<span class="line"><span style="color:#A6ACCD;"> message </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> fmt</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Sprintf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">My name is %s, I am %d years old, and my height is %.2f cm.</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> name</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> age</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> height</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;"> fmt</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Println</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">message</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><div class="danger custom-block"><p class="custom-block-title">DANGER</p><p>记住，fmt. Sprintf 不会直接打印内容，而是将格式化后的结果存储为字符串。如果你想直接在控制台输出格式化后的内容，应该使用 fmt. Printf。</p></div>`,31),p=[e];function o(r,c,y,D,F,i){return n(),a("div",null,p)}const d=s(l,[["render",o]]);export{A as __pageData,d as default};
