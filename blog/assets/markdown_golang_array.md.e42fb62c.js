import{_ as a,o as s,c as n,V as l}from"./chunks/framework.a166a3e7.js";const u=JSON.parse('{"title":"数组Array","description":"","frontmatter":{},"headers":[],"relativePath":"markdown/golang/array.md","filePath":"markdown/golang/array.md","lastUpdated":1692329948000}'),o={name:"markdown/golang/array.md"},e=l(`<h1 id="数组array" tabindex="-1">数组Array <a class="header-anchor" href="#数组array" aria-label="Permalink to &quot;数组Array&quot;">​</a></h1><p>Golang Array和以往认知的数组有很大不同。</p><p>数组：是同一种数据类型的固定长度的序列。</p><div class="language-go line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 数组定义方式</span></span>
<span class="line"><span style="color:#89DDFF;">var</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">len</span><span style="color:#89DDFF;">]</span><span style="color:#C792EA;">int</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//例子</span></span>
<span class="line"><span style="color:#89DDFF;">var</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">]</span><span style="color:#C792EA;">int</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 数组长度必须是常量，且是类型的组成部分。一旦定义，长度不变。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 长度是数组类型的一部分，因此：</span></span>
<span class="line"><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">var a[5] int</span><span style="color:#89DDFF;">\`</span><span style="color:#A6ACCD;"> 和 </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">var a[10]int是不同的类型。</span><span style="color:#89DDFF;">\`</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><ul><li><ol start="3"><li>长度是数组类型的一部分，因此，var a[5] int和var a[10]int是不同的类型。</li></ol></li><li><ol start="4"><li>数组可以通过下标进行访问，下标是从0开始，最后一个元素下标是：len-1</li></ol></li><li>for i := 0; i &lt; len(a); i++ {}</li><li>for index, v := range a {}</li><li><ol start="5"><li>访问越界，如果下标在数组合法范围之外，则触发访问越界，会panic</li></ol></li><li><ol start="6"><li>数组是值类型，赋值和传参会复制整个数组，而不是指针。因此改变副本的值，不会改变本身的值。</li></ol></li><li><ol start="7"><li>支持 &quot;==&quot;、&quot;!=&quot; 操作符，因为内存总是被初始化过的。</li></ol></li><li><ol start="8"><li>指针数组 [n]*T，数组指针 *[n]T。</li></ol></li></ul>`,5),r=[e];function t(p,i,c,y,d,D){return s(),n("div",null,r)}const m=a(o,[["render",t]]);export{u as __pageData,m as default};
